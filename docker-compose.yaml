version: '3'
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  # Kafka service
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: 'kafka'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes

  # MongoDB service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - ./data:/data/db

  # OMS microservice
  oms:
    build:
      context: ./apps/oms-ms
    container_name: oms
    image: my-oms-app
    ports:
      - "8001:8000"
    env_file:
      - .env
    environment:
      MONGODB_URI: ${MONGODB_URI_ORDERS}
      KAFKA_BROKER: ${KAFKA_BROKER}
      KAFKA_TOPIC: ${KAFKA_TOPIC_ORDERS}
      PORT: ${OMS_PORT}
    depends_on:
      - kafka
      - mongodb

  # INVENTORY microservice
  inventory:
    build:
      context: ./apps/inventory-ms
    container_name: inventory
    image: my-inventory-app
    ports:
      - "8002:8000"
    env_file:
      - .env
    environment:
      MONGODB_URI: ${MONGODB_URI_INVENTORY}
      KAFKA_BROKER: ${KAFKA_BROKER}
      KAFKA_TOPIC: ${KAFKA_TOPIC_INVENTORY}
      PORT: ${INVENTORY_PORT}
    depends_on:
      - kafka
      - mongodb
